<div class="min-h-screen bg-gray-100 p-8">
   <div class="max-w-6xl mx-auto">
       <!-- 도서 추가 섹션 -->
       <div class="bg-white rounded-lg shadow mb-8 p-6">
           <h2 class="text-xl font-semibold mb-4">도서 추가</h2>
           <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
               <input type="text" id="newISBN" placeholder="ISBN (13자리)" class="p-2 border rounded" maxlength="13">
               <input type="text" id="newTitle" placeholder="도서명" class="p-2 border rounded">
               <input type="text" id="newCategory" placeholder="카테고리" class="p-2 border rounded">
               <input type="number" id="newPrice" placeholder="가격" class="p-2 border rounded">
               <input type="number" id="newYear" placeholder="출판년도" class="p-2 border rounded">
               <button onclick="addBook()" class="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600">
                   추가
               </button>
           </div>
       </div>

       <!-- 도서 검색 섹션 -->
       <div class="bg-white rounded-lg shadow mb-8 p-6">
           <div class="flex gap-4">
               <input type="text" id="searchTitle" placeholder="정확한 도서명을 입력하세요" 
                      class="flex-1 p-2 border rounded">
               <button onclick="searchBooks()" class="bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-600">
                   검색
               </button>
           </div>
       </div>

       <!-- 검색 결과 테이블 -->
       <div class="bg-white rounded-lg shadow overflow-hidden">
           <table class="min-w-full">
               <thead class="bg-gray-50">
                   <tr>
                       <th class="px-6 py-3 text-left text-gray-500">ISBN</th>
                       <th class="px-6 py-3 text-left text-gray-500">도서명</th>
                       <th class="px-6 py-3 text-left text-gray-500">카테고리</th>
                       <th class="px-6 py-3 text-left text-gray-500">가격</th>
                       <th class="px-6 py-3 text-left text-gray-500">출판년도</th>
                       <th class="px-6 py-3 text-left text-gray-500">관리</th>
                   </tr>
               </thead>
               <tbody id="searchResults"></tbody>
           </table>
       </div>
   </div>
</div>

<!-- 수정 모달 -->
<div id="editModal" class="fixed inset-0 bg-gray-500 bg-opacity-75 hidden flex items-center justify-center">
   <div class="bg-white p-6 rounded-lg w-full max-w-md">
       <h2 class="text-xl font-semibold mb-4">도서 정보 수정</h2>
       <input type="hidden" id="editISBN">
       <div class="space-y-4">
           <div>
               <label class="block text-sm font-medium text-gray-700 mb-1">도서명</label>
               <input type="text" id="editTitle" class="w-full p-2 border rounded">
           </div>
           <div>
               <label class="block text-sm font-medium text-gray-700 mb-1">카테고리</label>
               <input type="text" id="editCategory" class="w-full p-2 border rounded">
           </div>
           <div>
               <label class="block text-sm font-medium text-gray-700 mb-1">가격</label>
               <input type="number" id="editPrice" class="w-full p-2 border rounded">
           </div>
           <div>
               <label class="block text-sm font-medium text-gray-700 mb-1">출판년도</label>
               <input type="number" id="editYear" class="w-full p-2 border rounded">
           </div>
       </div>
       <div class="flex justify-end gap-4 mt-6">
           <button onclick="closeEditModal()" class="px-4 py-2 bg-gray-200 text-gray-800 rounded hover:bg-gray-300">
               취소
           </button>
           <button onclick="updateBook()" class="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600">
               수정
           </button>
       </div>
   </div>
</div>

<script>
function addBook() {
   const bookData = {
       ISBN: document.getElementById('newISBN').value,
       title: document.getElementById('newTitle').value,
       category: document.getElementById('newCategory').value,
       price: document.getElementById('newPrice').value,
       year: document.getElementById('newYear').value
   };

   fetch('/admin/book/add', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify(bookData)
})
.then(res => res.json())
.then(data => {
    if (data.success) {
        alert('도서가 추가되었습니다.');
        clearAddForm();
    } else {
        alert(data.message || '정확한 도서 정보를 입력해주세요.');
    }
})
.catch(() => alert('서버와의 연결에 문제가 발생했습니다.'));

}

function searchBooks() {
   const searchTitle = document.getElementById('searchTitle').value;
   if (!searchTitle) return alert('검색어를 입력해주세요.');

   fetch(`/admin/book/search?title=${encodeURIComponent(searchTitle)}`)
       .then(res => res.json())
       .then(data => {
           if (data.error) {
               alert(data.error);
               document.getElementById('searchResults').innerHTML = '';
               return;
           }
           displaySearchResults(data.books);
       })
       .catch(() => {
           alert('검색 결과가 없습니다.');
           document.getElementById('searchResults').innerHTML = '';
       });
}

function editBook(book) {
   document.getElementById('editISBN').value = book.ISBN;
   document.getElementById('editTitle').value = book.title;
   document.getElementById('editCategory').value = book.category;
   document.getElementById('editPrice').value = book.price;
   document.getElementById('editYear').value = book.year;
   document.getElementById('editModal').classList.remove('hidden');
}

function updateBook() {
   const bookData = {
       ISBN: document.getElementById('editISBN').value,
       title: document.getElementById('editTitle').value,
       category: document.getElementById('editCategory').value,
       price: document.getElementById('editPrice').value,
       year: document.getElementById('editYear').value
   };

   fetch('/admin/book/update', {
       method: 'PUT',
       headers: { 'Content-Type': 'application/json' },
       body: JSON.stringify(bookData)
   })
   .then(res => res.json())
   .then(data => {
       if(data.success) {
           alert('수정되었습니다.');
           closeEditModal();
           searchBooks();
       }
   })
   .catch(() => alert('수정 중 오류가 발생했습니다.'));
}

function deleteBook(ISBN) {
   if(!confirm('정말 삭제하시겠습니까?')) return;
   
   fetch(`/admin/book/${ISBN}`, { method: 'DELETE' })
       .then(res => res.json())
       .then(data => {
           if(data.success) {
               searchBooks();
           }
       })
       .catch(() => alert('삭제 중 오류가 발생했습니다.'));
}

function closeEditModal() {
   document.getElementById('editModal').classList.add('hidden');
}

function clearAddForm() {
   ['ISBN', 'Title', 'Category', 'Price', 'Year'].forEach(field => {
       document.getElementById('new' + field).value = '';
   });
}

function displaySearchResults(books) {
   document.getElementById('searchResults').innerHTML = books.map(book => `
       <tr class="border-t">
           <td class="px-6 py-4">${book.ISBN}</td>
           <td class="px-6 py-4">${book.title}</td>
           <td class="px-6 py-4">${book.category || '-'}</td>
           <td class="px-6 py-4">${book.price}원</td>
           <td class="px-6 py-4">${book.year}</td>
           <td class="px-6 py-4">
               <button onclick='editBook(${JSON.stringify(book)})' 
                       class="text-blue-500 hover:text-blue-700 mr-4">수정</button>
               <button onclick='deleteBook("${book.ISBN}")' 
                       class="text-red-500 hover:text-red-700">삭제</button>
           </td>
       </tr>
   `).join('');
}
</script>