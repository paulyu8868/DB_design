<div class="min-h-screen bg-gray-100 p-8">
    <div class="max-w-6xl mx-auto">
        <!-- 재고 추가 섹션 -->
        <div class="bg-white rounded-lg shadow mb-8 p-6">
            <h2 class="text-xl font-semibold mb-4">재고 추가</h2>
            <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                <input type="text" id="newISBN" placeholder="도서 ISBN" class="p-2 border rounded" maxlength="13">
                <input type="text" id="newWarehouseCode" placeholder="창고 코드" class="p-2 border rounded" maxlength="20">
                <input type="number" id="newQuantity" placeholder="수량" class="p-2 border rounded">
                <button onclick="addInventory()" class="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600">
                    추가
                </button>
            </div>
        </div>

        <!-- 재고 검색 섹션 -->
        <div class="bg-white rounded-lg shadow mb-8 p-6">
            <div class="flex gap-4">
                <input type="text" id="searchISBN" placeholder="도서 ISBN을 입력하세요" 
                       class="flex-1 p-2 border rounded">
                <button onclick="searchInventory()" class="bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-600">
                    검색
                </button>
            </div>
        </div>

        <!-- 검색 결과 테이블 -->
        <div class="bg-white rounded-lg shadow overflow-hidden">
            <table class="min-w-full">
                <thead class="bg-gray-50">
                    <tr>
                        <th class="px-6 py-3 text-left text-gray-500">도서 ISBN</th>
                        <th class="px-6 py-3 text-left text-gray-500">창고 코드</th>
                        <th class="px-6 py-3 text-left text-gray-500">수량</th>
                        <th class="px-6 py-3 text-left text-gray-500">관리</th>
                    </tr>
                </thead>
                <tbody id="searchResults"></tbody>
            </table>
        </div>
    </div>
</div>

<!-- 수정 모달 -->
<div id="editModal" class="fixed inset-0 bg-gray-500 bg-opacity-75 hidden flex items-center justify-center">
    <div class="bg-white p-6 rounded-lg w-full max-w-md">
        <h2 class="text-xl font-semibold mb-4">재고 정보 수정</h2>
        <input type="hidden" id="editISBN">
        <input type="hidden" id="editWarehouseCode">
        <div class="space-y-4">
            <div>
                <label class="block text-sm font-medium text-gray-700 mb-1">수량</label>
                <input type="number" id="editQuantity" class="w-full p-2 border rounded">
            </div>
        </div>
        <div class="flex justify-end gap-4 mt-6">
            <button onclick="closeEditModal()" class="px-4 py-2 bg-gray-200 text-gray-800 rounded hover:bg-gray-300">
                취소
            </button>
            <button onclick="updateInventory()" class="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600">
                수정
            </button>
        </div>
    </div>
</div>

<script>
function addInventory() {
    const inventoryData = {
        Book_ISBN: document.getElementById('newISBN').value,
        Warehouse_code: document.getElementById('newWarehouseCode').value,
        quantity: document.getElementById('newQuantity').value
    };

    fetch('/admin/inventory/add', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(inventoryData)
    })
    .then(res => res.json())
    .then(data => {
        if (data.success) {
            alert('재고가 추가되었습니다.');
            clearAddForm();
        } else {
            alert(data.error);
        }
    })
    .catch(() => alert('서버와의 연결에 문제가 발생했습니다.'));
}

function searchInventory() {
    const searchISBN = document.getElementById('searchISBN').value;
    if (!searchISBN) return alert('ISBN을 입력해주세요.');

    fetch(`/admin/inventory/search?isbn=${encodeURIComponent(searchISBN)}`)
        .then(res => res.json())
        .then(data => {
            if (data.error) {
                alert(data.error);
                document.getElementById('searchResults').innerHTML = '';
                return;
            }
            displaySearchResults(data.inventories);
        })
        .catch(() => {
            alert('검색 결과가 없습니다.');
            document.getElementById('searchResults').innerHTML = '';
        });
}

function editInventory(inventory) {
    document.getElementById('editISBN').value = inventory.Book_ISBN;
    document.getElementById('editWarehouseCode').value = inventory.Warehouse_code;
    document.getElementById('editQuantity').value = inventory.quantity;
    document.getElementById('editModal').classList.remove('hidden');
}

function updateInventory() {
    const inventoryData = {
        Book_ISBN: document.getElementById('editISBN').value,
        Warehouse_code: document.getElementById('editWarehouseCode').value,
        quantity: document.getElementById('editQuantity').value
    };

    fetch('/admin/inventory/update', {
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(inventoryData)
    })
    .then(res => res.json())
    .then(data => {
        if(data.success) {
            alert('수정되었습니다.');
            closeEditModal();
            searchInventory();
        }
    })
    .catch(() => alert('수정 중 오류가 발생했습니다.'));
}

function deleteInventory(ISBN, code) {
    if(!confirm('정말 삭제하시겠습니까?')) return;
    
    fetch(`/admin/inventory/${ISBN}/${code}`, { method: 'DELETE' })
        .then(res => res.json())
        .then(data => {
            if(data.success) {
                searchInventory();
            }
        })
        .catch(() => alert('삭제 중 오류가 발생했습니다.'));
}

function closeEditModal() {
    document.getElementById('editModal').classList.add('hidden');
}

function clearAddForm() {
    ['ISBN', 'WarehouseCode', 'Quantity'].forEach(field => {
        document.getElementById('new' + field).value = '';
    });
}

function displaySearchResults(inventories) {
    document.getElementById('searchResults').innerHTML = inventories.map(inv => `
        <tr class="border-t">
            <td class="px-6 py-4">${inv.Book_ISBN}</td>
            <td class="px-6 py-4">${inv.Warehouse_code}</td>
            <td class="px-6 py-4">${inv.quantity}</td>
            <td class="px-6 py-4">
                <button onclick='editInventory(${JSON.stringify(inv)})' 
                        class="text-blue-500 hover:text-blue-700 mr-4">수정</button>
                <button onclick='deleteInventory("${inv.Book_ISBN}", "${inv.Warehouse_code}")' 
                        class="text-red-500 hover:text-red-700">삭제</button>
            </td>
        </tr>
    `).join('');
}
</script>